# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: synapse
summary: Synapse rock
description: Synapse OCI image for the Synapse charm
version: "1.0"
base: ubuntu@22.04
# renovate: base: ubuntu:22.04@sha256:58b87898e82351c6cf9cf5b9f3c20257bb9e2dcf33af051e12ce532d7f94e3fe
build-base: ubuntu@22.04
# renovate: build-base: ubuntu:22.04@sha256:58b87898e82351c6cf9cf5b9f3c20257bb9e2dcf33af051e12ce532d7f94e3fe
license: Apache-2.0
platforms:
  amd64:
parts:
    scripts:
      plugin: dump
      source: scripts
      organize:
        "*": usr/local/bin/
      override-prime: |
        craftctl default
        chmod -R +x usr/local/bin/*
    cron:
      after:
        - scripts
      stage-packages:
        - cron
      plugin: dump
      source: cron
      organize:
        "cron.hourly/*": /etc/cron.hourly
        "cron.daily/*": /etc/cron.daily
        "cron.weekly/*": /etc/cron.weekly
        "cron.monthly/*": /etc/cron.monthly
      override-prime: |
        craftctl default
        chmod -R +x etc/cron.*
    add-user:
        plugin: nil
        overlay-script: |
          groupadd -R $CRAFT_OVERLAY --gid 991 synapse
          useradd -R $CRAFT_OVERLAY --system --gid 991 --uid 991 --home /srv/synapse -m synapse
    synapse:
        build-packages:
            - build-essential
            - curl
            - git
            - libffi-dev
            - libicu-dev
            - libjpeg-dev
            - libpq-dev
            - libssl-dev
            - libwebp-dev
            - libxml++2.6-dev
            - libxslt1-dev
            - openssl
            - pkg-config
            - python3-dev
            - python3-pip
            - python3-setuptools
            - zlib1g-dev
        stage-packages:
            - bash
            - coreutils
            - curl
            - gosu
            - gpg
            - gpg-agent
            - libffi-dev
            - libicu70
            - libjemalloc2
            - libjpeg-turbo8
            - libpq5
            - libssl-dev
            - libwebp7
            - openssl
            - python3
            - xmlsec1
        stage-snaps:
            - aws-cli
            - mjolnir/latest/edge
            - matrix-appservice-irc/latest/edge
        plugin: nil
        source: https://github.com/element-hq/synapse/
        source-type: git
        source-tag: v1.115.0
        build-environment:
          - RUST_VERSION: "1.76.0"
          - POETRY_VERSION: "1.7.1"
        override-build: |
            craftctl default
            export RUSTUP_HOME=/rust
            export CARGO_HOME=/cargo
            export PATH=/cargo/bin:/rust/bin:$PATH
            export CARGO_NET_GIT_FETCH_WITH_CLI=false
            mkdir -p /rust /cargo /synapse /install
            curl -m 30 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path --default-toolchain=$RUST_VERSION --profile minimal
            /rust/toolchains/$RUST_VERSION-x86_64-unknown-linux-gnu/bin/rustc -V > $CRAFT_PART_INSTALL/rust-version
            pip3 install -U pip setuptools
            pip3 install --root-user-action=ignore "poetry==$POETRY_VERSION"
            cp pyproject.toml poetry.lock /synapse/
            /usr/local/bin/poetry export --extras all -o /synapse/requirements.txt
            pip3 install --prefix="/install" --no-deps --no-warn-script-location -r /synapse/requirements.txt
            git clone https://github.com/canonical/synapse_stats_exporter.git
            cd synapse_stats_exporter
            pip3 install --prefix="/install" --no-warn-script-location -U .
            cd ..
            git clone --branch v1.4.0 --depth 1 https://github.com/matrix-org/synapse-s3-storage-provider
            cd synapse-s3-storage-provider
            pip3 install --prefix="/install" --no-warn-script-location -U .
            cd ..
            cp -r synapse /synapse/
            cp -r rust /synapse/
            cp pyproject.toml README.rst build_rust.py Cargo.toml Cargo.lock /synapse/
            pip3 install --prefix="/install" --no-deps --no-warn-script-location /synapse[all];
            git clone https://git.buechner.me/nbuechner/synapse-invite-checker
            cd synapse-invite-checker
            pip3 install --prefix="/install" --no-warn-script-location -U .
            cd ..
            cp docker/start.py $CRAFT_PART_INSTALL/
            chmod 755 $CRAFT_PART_INSTALL/start.py
            cp -r docker/conf $CRAFT_PART_INSTALL/
            cp -r /usr/local $CRAFT_PART_INSTALL/usr/
            cp -r /install/local/* $CRAFT_PART_INSTALL/usr/local/
            mkdir -p $CRAFT_PART_INSTALL/usr/local/attributemaps
            chmod 755 $CRAFT_PART_INSTALL/usr/local/attributemaps
        overlay-packages:
            - ca-certificates
            - libjemalloc2
    patches:
      plugin: dump
      after: [synapse]
      source: patches
      organize:
        "*": srv/patches/
    patch-start:
        after:
          - patches
        plugin: nil
        build-packages:
          - git
        override-stage: |
            patch -f -u ./start.py -i srv/patches/start.patch
    synapse-conf:
        plugin: dump
        source: attributemaps
        organize:
            login_ubuntu.py: /usr/local/attributemaps/login_ubuntu.py
