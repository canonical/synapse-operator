# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: synapse
summary: Synapse rock
description: Synapse OCI image for the Synapse charm
version: "1.0"
base: ubuntu:22.04
# renovate: base: ubuntu:22.04@sha256:deadbeefcec90b11d2869e00fe1f2380c21cbfcd799ee35df8bd7ac09e6f63ea
build-base: ubuntu:22.04
# renovate: build-base: ubuntu:22.04@sha256:deadbeefcec90b11d2869e00fe1f2380c21cbfcd799ee35df8bd7ac09e6f63ea
license: Apache-2.0
platforms:
  amd64:
parts:
    synapse:
        build-packages:
            - build-essential
            - ca-certificates
            - curl
            - git
            - libffi-dev
            - libicu-dev
            - libjpeg-dev
            - libpq-dev
            - libssl-dev
            - libwebp-dev
            - libxml++2.6-dev
            - libxslt1-dev
            - openssl
            - pkg-config
            - python3-dev
            - python3-pip
            - python3-setuptools
            - zlib1g-dev
        stage-packages:
            - bash
            - coreutils
            - curl
            - gosu
            - libffi-dev
            - libicu70
            - libjemalloc2
            - libjpeg-turbo8
            - libpq5
            - libssl-dev
            - libwebp7
            - openssl
            - python3
            - xmlsec1
        stage-snaps:
            - mjolnir/latest/edge
        plugin: nil
        source: https://github.com/matrix-org/synapse/
        source-type: git
        source-tag: v1.85.2
        override-build: |
            craftctl default
            export RUSTUP_HOME=/rust
            export CARGO_HOME=/cargo
            export PATH=/cargo/bin:/rust/bin:$PATH
            export CARGO_NET_GIT_FETCH_WITH_CLI=false
            mkdir -p /rust /cargo /synapse /install
            curl -m 30 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path --default-toolchain stable --profile minimal
            pip3 install -U pip setuptools
            pip3 install --root-user-action=ignore "poetry==1.3.2"
            cp pyproject.toml poetry.lock /synapse/
            /usr/local/bin/poetry export --extras all -o /synapse/requirements.txt
            pip3 install --prefix="/install" --no-deps --no-warn-script-location -r /synapse/requirements.txt
            cp -r synapse /synapse/
            cp -r rust /synapse/
            cp pyproject.toml README.rst build_rust.py Cargo.toml Cargo.lock /synapse/
            pip3 install --prefix="/install" --no-deps --no-warn-script-location /synapse[all];
            cp docker/start.py $CRAFT_PART_INSTALL/
            chmod 755 $CRAFT_PART_INSTALL/start.py
            sed -i 's/#!\/usr\/local\/bin\/python/#!\/usr\/bin\/python3/' $CRAFT_PART_INSTALL/start.py
            cp -r docker/conf $CRAFT_PART_INSTALL/
            cp -r /usr/local $CRAFT_PART_INSTALL/usr/
            cp -r /install/local/* $CRAFT_PART_INSTALL/usr/local/
            mkdir -p $CRAFT_PART_INSTALL/usr/local/attributemaps
            chmod 755 $CRAFT_PART_INSTALL/usr/local/attributemaps
            # Copy root certificates
            mkdir -p $CRAFT_PART_INSTALL/etc/ssl/certs/
            cp /etc/ssl/certs/ca-certificates.crt $CRAFT_PART_INSTALL/etc/ssl/certs/
    synapse-conf:
        plugin: dump
        source: attributemaps
        organize:
            login_ubuntu.py: /usr/local/attributemaps/login_ubuntu.py
